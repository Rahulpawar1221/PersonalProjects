package com.tka.OrganizationWorkFlow.dao;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.tka.OrganizationWorkFlow.entity.Country;



@Repository
public class MainDao {
	@Autowired
	SessionFactory factory;
	public String addCountry(Country c) {
		
	   Session session = null;
	   Transaction tx = null;
	   String msg = null;
	   try {
	   session =factory.openSession();
	   tx = session.beginTransaction();
	   session.persist(c);
	   tx.commit();
	   msg = "Country added successfully";
	   }catch(Exception e) {
		   if(tx!=null) {
			   tx.rollback();
		   }
		   e.printStackTrace();
	   }finally {
		   if(session!=null) {
			   session.close();
		   }
	   }
	   return msg;
	}
	
	
	public String updateCountry(Country c, int id) {
		Session session = null;
		Transaction tx = null;
		String str=null;
		try {
			session=factory.openSession();
			tx=session.beginTransaction();
			Country country = session.get(Country.class, id);
			if(country!=null) {
				country.setCountry_name(c.getCountry_name());
				session.merge(country);
				tx.commit();
				str="Country Updated Successfully";
			}
			else {
				str="Country not Found";
			}
		}
		catch(Exception e) {
			if(tx!=null) {
				tx.rollback();
			}
			e.printStackTrace();
		}finally {
			if(session!=null) {
				session.close();
			}
		}
		return str;
	}


	public String deleteCountry(int cid) {
		Session session = null;
		Transaction tx = null;
		String deleteMsg = null;
		
		try {
			session = factory.openSession();
			tx=session.beginTransaction();
			Country countryObj = session.get(Country.class, cid);//returns object of country
			session.remove(countryObj);
			tx.commit();
			deleteMsg="Country Deleted Successfully";
			
		}catch(Exception e) {
			if(tx!=null) {
				tx.rollback();
				e.printStackTrace();
			}
		}finally {
			if(session!=null) {
				session.close();
			}
		}
		return deleteMsg;
	}


	public String getAllCountry() {
		Session session = null;
		Transaction tx=null;
		String getAllMsg;
		
		try {
			session = factory.openSession();
			tx=session.beginTransaction(); // returns object of transaction
			
		}
		catch(Exception e){
			if(tx!=null) {
				tx.rollback();
			}
			e.printStackTrace();
		}finally {
			if(session!=null) {
				session.close();
			}
		}
		return null;
	}
}
